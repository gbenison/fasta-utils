/*
 * Report on contiguous sequence stretches in FASTA sequence files.
 */

%x COMMENT
%x SEQUENCE

%{
	#include <getopt.h>

	static const struct option my_options[] =
	{
		{"verbose",	no_argument,	NULL,	'v'},
		{0,0,0,0}
	};

	int verbose_mode = 0; /* operate in verbose mode? */
	int first_non_gap = 0;

	int seq_idx  = 0;  /* Sequence currently being processed */
        int pos_idx  = 0;  /* Position (gap or base) within sequence */
        int n_contig = 0;  /* Number of contiguous non-gaps in this chunk */

	#define MIN_REPORT_SIZE 10

	static void
        report_last_contig()
        {
	  if (n_contig >= MIN_REPORT_SIZE)
	    printf("  %6d -- %6d (%6d bp)\n",
                   pos_idx - n_contig + 1, pos_idx, n_contig);
        }

%}

%%
<INITIAL>[;>]    BEGIN(COMMENT);
<COMMENT>\n      BEGIN(INITIAL);
<INITIAL>[A-Z]|- {BEGIN(SEQUENCE);
                  n_contig = 0;
                  pos_idx = 0;
		  seq_idx++;
		  if (verbose_mode) printf("Sequence %d:\n", seq_idx);
                 }
<SEQUENCE>[AGTC] {++n_contig; ++pos_idx;
		  if (first_non_gap == 0) first_non_gap = pos_idx;}
<SEQUENCE>-      { if (verbose_mode) report_last_contig();
                   n_contig = 0;
		   pos_idx++;
                 }
<SEQUENCE>[;>]   {BEGIN(COMMENT);
                  if (verbose_mode) report_last_contig();
                  n_contig = 0; pos_idx = 0;
                 }
<SEQUENCE><<EOF>> { if (verbose_mode) report_last_contig(); yyterminate(); }
<*>.|\n          { /* default rule -- gobble */ }

%%

int
main(int argc, char *argv[])
{
  /* option parsing */
  while (1)
  {
	int option_idx = 0;
	int code = getopt_long(argc, argv, "v", my_options, &option_idx);
	if (code == -1) break;
	else if (code == 'v') verbose_mode = 1;
  }

  yylex();
  if (!verbose_mode) printf("%d", first_non_gap);
}