/*
 * GCB 23feb11
 *
 * Clean-up FASTA file:
 *   -- normalize column width
 *   -- ensure sequence ends with a newline
 *   -- ensure first line is a comment, adjustable with '--comment' option
 */

%x COMMENT
%x SEQUENCE

%{
#include <stdlib.h>
#include <getopt.h>
#define NULL_FLAG NULL

   static const int column_width = 40;
   int n;

   static const struct option my_options[] =
   {
	{"comment",	required_argument,	NULL_FLAG,	'c'},
	{0,0,0,0}
   };

%}

%%
<INITIAL>[;>]	BEGIN(COMMENT);
<COMMENT>\n	BEGIN(INITIAL);
<INITIAL>[A-Z]|-	{
                          BEGIN(SEQUENCE);
                          n = 0;
                        }
<SEQUENCE>[AGTC]|-  {if (n > 0 && ((n % column_width) == 0))
                       printf("\n");
                     ++n;
                     ECHO;
                    }
<SEQUENCE>[;>]	{ printf("\n"); BEGIN(COMMENT); }
<SEQUENCE><<EOF>> { printf("\n"); yyterminate();}
<*>.|\n 	{/* default rule - gobble */}

%%

int
main(int argc, char *argv[])
{
  /* option parsing */

  while (1)
  {
    int option_idx = 0;
    int code = getopt_long(argc, argv, "c:", my_options, &option_idx);
    if (code == -1) break;
    else if (code == 'c') printf ("> %s\n", optarg);
  }

  yyin = (optind < argc) ? fopen(argv[optind], "r") : stdin;
  yylex();
}